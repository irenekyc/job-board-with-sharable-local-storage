{"ast":null,"code":"var _jsxFileName = \"/Users/irenechow/Desktop/job-board/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment, useState, useEffect } from 'react';\nimport MetaHead from '../src/components/Head';\nimport Layout from '../src/layout/Layout';\nimport NavBar from '../src/components/NavBar';\nimport Main from '../src/components/Main';\nimport Footer from '../src/components/Footer';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\nconst Index = ({\n  jobs,\n  error\n}) => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: failed,\n    1: setError\n  } = useState(false);\n  const {\n    0: jobsData,\n    1: setJobs\n  } = useState([]);\n  useEffect(() => {\n    setLoading(false);\n    setJobs(jobs);\n  }, [jobs]);\n  useEffect(() => {\n    if (error) {\n      setError(true);\n    }\n  }, [error]);\n  const res = useSelector(state => state.jobs);\n  useEffect(() => {\n    if (res.filtered) {\n      setJobs(res.filtered);\n    }\n  }, [res]);\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(MetaHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), __jsx(Main, {\n    jobs: jobsData,\n    error: failed,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport async function getStaticProps() {\n  console.log('from static props');\n  const res = await axios.get(\"https://jobs.github.com/positions.json?page=0\");\n\n  try {\n    return {\n      props: {\n        jobs: res.data\n      }\n    };\n  } catch (error) {\n    return {\n      props: {\n        error: true\n      }\n    };\n  }\n}\nexport default Index;","map":{"version":3,"sources":["/Users/irenechow/Desktop/job-board/pages/index.js"],"names":["Fragment","useState","useEffect","MetaHead","Layout","NavBar","Main","Footer","axios","useSelector","Index","jobs","error","loading","setLoading","failed","setError","jobsData","setJobs","res","state","filtered","getStaticProps","console","log","get","props","data"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAC/B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACc,MAAD;AAAA,OAASC;AAAT,MAAqBf,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM;AAAA,OAACgB,QAAD;AAAA,OAAWC;AAAX,MAAsBjB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,IAAAA,OAAO,CAACP,IAAD,CAAP;AACH,GAHQ,EAGN,CAACA,IAAD,CAHM,CAAT;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,KAAJ,EAAW;AACPI,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,GAJQ,EAIN,CAACJ,KAAD,CAJM,CAAT;AAMA,QAAMO,GAAG,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACT,IAAhB,CAAvB;AACAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIiB,GAAG,CAACE,QAAR,EAAkB;AACdH,MAAAA,OAAO,CAACC,GAAG,CAACE,QAAL,CAAP;AACH;AACJ,GAJQ,EAIN,CAACF,GAAD,CAJM,CAAT;AAMA,SACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEF,QAAZ;AAAsB,IAAA,KAAK,EAAEF,MAA7B;AAAqC,IAAA,OAAO,EAAEF,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAFJ,CADJ;AASH,CAhCD;;AAkCA,OAAO,eAAeS,cAAf,GAAgC;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,QAAML,GAAG,GAAG,MAAMX,KAAK,CAACiB,GAAN,CAAU,+CAAV,CAAlB;;AACA,MAAI;AACA,WAAO;AACHC,MAAAA,KAAK,EAAE;AACHf,QAAAA,IAAI,EAAEQ,GAAG,CAACQ;AADP;AADJ,KAAP;AAKH,GAND,CAME,OAAOf,KAAP,EAAc;AACZ,WAAO;AACHc,MAAAA,KAAK,EAAE;AACHd,QAAAA,KAAK,EAAE;AADJ;AADJ,KAAP;AAMH;AACJ;AAED,eAAeF,KAAf","sourcesContent":["import { Fragment, useState, useEffect } from 'react';\nimport MetaHead from '../src/components/Head';\nimport Layout from '../src/layout/Layout';\nimport NavBar from '../src/components/NavBar';\nimport Main from '../src/components/Main';\nimport Footer from '../src/components/Footer'\nimport axios from 'axios'\nimport { useSelector } from 'react-redux';\n\nconst Index = ({ jobs, error }) => {\n    const [loading, setLoading] = useState(true);\n    const [failed, setError] = useState(false);\n    const [jobsData, setJobs] = useState([]);\n\n    useEffect(() => {\n        setLoading(false)\n        setJobs(jobs)\n    }, [jobs])\n\n    useEffect(() => {\n        if (error) {\n            setError(true)\n        }\n    }, [error])\n\n    const res = useSelector(state => state.jobs)\n    useEffect(() => {\n        if (res.filtered) {\n            setJobs(res.filtered)\n        }\n    }, [res])\n\n    return (\n        <Fragment>\n            <MetaHead />\n            <Layout>\n                <NavBar />\n                <Main jobs={jobsData} error={failed} loading={loading} />\n                <Footer />\n            </Layout>\n        </Fragment>)\n}\n\nexport async function getStaticProps() {\n    console.log('from static props')\n    const res = await axios.get(\"https://jobs.github.com/positions.json?page=0\");\n    try {\n        return {\n            props: {\n                jobs: res.data,\n            }\n        }\n    } catch (error) {\n        return {\n            props: {\n                error: true,\n            }\n\n        }\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/irenechow/Desktop/job-board/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\nwidth:90%;\\npadding: 100px 50px;\\ndisplay: grid;\\ngrid-gap: 1rem;\\ngrid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nwidth:100%;\\nheight:100%;\\ndisplay:grid;\\nplace-items:center;\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport JobCard from './JobCards/JobCard';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Pagination from './Pagination';\nvar MainSection = styled.main(_templateObject());\n_c = MainSection;\nvar Container = styled.div(_templateObject2());\n_c2 = Container;\n\nvar Main = function Main(_ref) {\n  _s();\n\n  var jobs = _ref.jobs,\n      error = _ref.error,\n      loading = _ref.loading;\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      jobData = _useState[0],\n      setJobs = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.jobs;\n  }),\n      newSearchLoading = _useSelector.newSearchLoading,\n      filtered = _useSelector.filtered;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.query;\n  }),\n      search = _useSelector2.search,\n      location = _useSelector2.location;\n\n  var _useState2 = useState(0),\n      curPage = _useState2[0],\n      setCurPage = _useState2[1];\n\n  useEffect(function () {\n    setJobs(jobs);\n  }, [jobs]);\n  useEffect(function () {\n    if (newSearchLoading) {\n      setJobs([]);\n    }\n  }, [newSearchLoading]);\n  useEffect(function () {\n    setJobs(filtered);\n  }, [filtered]);\n  return __jsx(MainSection, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  }, __jsx(Pagination, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, error ? __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }\n  }, \"Error\") : loading || newSearchLoading ? __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 48\n    }\n  }, \" Loading ...\") : jobData && jobData.map(function (job, index) {\n    if (index == jobData.length - 1) {\n      return __jsx(\"div\", {\n        key: index,\n        ref: lastElementRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 36\n        }\n      }, __jsx(JobCard, {\n        className: \"job-card\",\n        key: index,\n        data: job,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 74\n        }\n      }));\n    }\n\n    return __jsx(JobCard, {\n      className: \"job-card\",\n      key: index,\n      data: job,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    });\n  })));\n};\n\n_s(Main, \"HEmeHIho7i64XkqpEkdXFq/eaC4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c3 = Main;\nexport default Main;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MainSection\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Main\");","map":{"version":3,"sources":["/Users/irenechow/Desktop/job-board/src/components/Main.js"],"names":["React","useEffect","useState","styled","JobCard","useSelector","useDispatch","Pagination","MainSection","main","Container","div","Main","jobs","error","loading","dispatch","jobData","setJobs","state","newSearchLoading","filtered","query","search","location","curPage","setCurPage","map","job","index","length","lastElementRef"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport JobCard from './JobCards/JobCard';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Pagination from './Pagination'\n\n\nconst MainSection = styled.main`\nwidth:100%;\nheight:100%;\ndisplay:grid;\nplace-items:center;`\nconst Container = styled.div`\nwidth:90%;\npadding: 100px 50px;\ndisplay: grid;\ngrid-gap: 1rem;\ngrid-template-columns: repeat(auto-fit, minmax(320px, 1fr));`\n\n\nconst Main = ({ jobs, error, loading }) => {\n    const dispatch = useDispatch()\n    const [jobData, setJobs] = useState([])\n    const { newSearchLoading, filtered } = useSelector(state => state.jobs)\n    const { search, location } = useSelector(state => state.query)\n    const [curPage, setCurPage] = useState(0)\n\n    useEffect(() => {\n        setJobs(jobs)\n    }, [jobs])\n\n    useEffect(() => {\n        if (newSearchLoading) {\n            setJobs([])\n        }\n\n    }, [newSearchLoading])\n\n\n    useEffect(() => {\n        setJobs(filtered)\n    }, [filtered])\n    return <MainSection>\n        <Pagination />\n        <Container>\n            {error ? (<h2>Error</h2>) :\n                loading || newSearchLoading ? (<h2> Loading ...</h2>) :\n                    jobData && jobData.map((job, index) => {\n                        if (index == jobData.length - 1) {\n                            return <div key={index} ref={lastElementRef}><JobCard className=\"job-card\" key={index} data={job} /></div>\n                        }\n                        return (<JobCard className=\"job-card\" key={index} data={job} />)\n                    })}\n\n        </Container>\n    </MainSection>\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}
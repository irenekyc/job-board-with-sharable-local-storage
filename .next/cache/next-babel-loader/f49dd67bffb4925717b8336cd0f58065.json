{"ast":null,"code":"var _jsxFileName = \"/Users/irenechow/Desktop/job-board/src/components/Main.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport JobCard from './JobCards/JobCard';\nimport { useSelector } from 'react-redux';\nconst MainSection = styled.main`\nwidth:100%;\nheight:100%;\ndisplay:grid;\nplace-items:center;`;\nconst Container = styled.div`\nwidth:90%;\npadding: 100px 50px;\ndisplay: grid;\ngrid-gap: 1rem;\ngrid-template-columns: repeat(auto-fit, minmax(320px, 1fr));`;\n\nconst Main = ({\n  jobs,\n  error,\n  loading\n}) => {\n  const {\n    0: jobData,\n    1: setJobs\n  } = useState([]);\n  const {\n    0: firstLoad,\n    1: setFirstLoad\n  } = useState(true);\n  const {\n    filtered\n  } = useSelector(state => state.jobs);\n  useEffect(() => {\n    setJobs(jobs);\n  }, [jobs]);\n  useEffect(() => {\n    setJobs(filtered);\n    setFirstLoad(false);\n  }, [filtered]);\n  return __jsx(MainSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, error ? __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }\n  }, \"Error\") : loading ? __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 28\n    }\n  }, \" Loading ...\") : jobData && jobData.map(job => __jsx(JobCard, {\n    key: job.id,\n    data: job,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/irenechow/Desktop/job-board/src/components/Main.js"],"names":["React","useEffect","useState","styled","JobCard","useSelector","MainSection","main","Container","div","Main","jobs","error","loading","jobData","setJobs","firstLoad","setFirstLoad","filtered","state","map","job","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,MAAMC,WAAW,GAAGH,MAAM,CAACI,IAAK;;;;oBAAhC;AAKA,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAI;;;;;6DAA7B;;AAQA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AACvC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAqBb,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM;AAAA,OAACc,SAAD;AAAA,OAAYC;AAAZ,MAA4Bf,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAeb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACR,IAAhB,CAAhC;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,OAAO,CAACJ,IAAD,CAAP;AACH,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,OAAO,CAACG,QAAD,CAAP;AACAD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,GAJQ,EAIN,CAACC,QAAD,CAJM,CAAT;AAKA,SAAO,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAJ,GACFC,OAAO,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,GACHC,OAAO,IAAIA,OAAO,CAACM,GAAR,CAAYC,GAAG,IACtB,MAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAG,CAACC,EAAlB;AAAsB,IAAA,IAAI,EAAED,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,CAHvB,CADG,CAAP;AASH,CAtBD;;AAwBA,eAAeX,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport JobCard from './JobCards/JobCard';\nimport { useSelector } from 'react-redux';\n\n\nconst MainSection = styled.main`\nwidth:100%;\nheight:100%;\ndisplay:grid;\nplace-items:center;`\nconst Container = styled.div`\nwidth:90%;\npadding: 100px 50px;\ndisplay: grid;\ngrid-gap: 1rem;\ngrid-template-columns: repeat(auto-fit, minmax(320px, 1fr));`\n\n\nconst Main = ({ jobs, error, loading }) => {\n    const [jobData, setJobs] = useState([])\n    const [firstLoad, setFirstLoad] = useState(true)\n    const { filtered } = useSelector(state => state.jobs)\n    useEffect(() => {\n        setJobs(jobs)\n    }, [jobs])\n\n    useEffect(() => {\n        setJobs(filtered)\n        setFirstLoad(false)\n\n    }, [filtered])\n    return <MainSection>\n        <Container>\n            {error ? (<h2>Error</h2>) :\n                loading ? (<h2> Loading ...</h2>) :\n                    jobData && jobData.map(job => (\n                        <JobCard key={job.id} data={job}></JobCard>))}\n\n        </Container>\n    </MainSection>\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}
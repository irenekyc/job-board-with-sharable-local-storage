{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { SET_JOBRES, FETCHERROR, INIT_NEW_SEARCH } from './types';\nexport var newSearch = function newSearch() {\n  return {\n    type: INIT_NEW_SEARCH\n  };\n};\nexport var getData = function getData(searchQuery, locationQuery) {\n  var page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(searchQuery === null & location === null)) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\", getLatestJob(page));\n\n            case 4:\n              _context.next = 6;\n              return axios.get(\"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?title=\".concat(searchQuery, \"&location=\").concat(locationQuery, \"&page=\").concat(page));\n\n            case 6:\n              res = _context.sent;\n\n            case 7:\n              try {\n                dispatch({\n                  type: SET_JOBRES,\n                  payload: res.data\n                });\n              } catch (error) {\n                dispatch({\n                  type: FETCHERROR,\n                  payload: error\n                });\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getLatestJob = function getLatestJob(page) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.get(\"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?page=\".concat(page));\n\n            case 2:\n              res = _context2.sent;\n\n              try {\n                dispatch({\n                  type: SET_JOBRES,\n                  payload: res.data\n                });\n              } catch (error) {\n                dispatch({\n                  type: FETCHERROR,\n                  payload: error\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/irenechow/Desktop/job-board/src/store/actions/jobs.js"],"names":["axios","SET_JOBRES","FETCHERROR","INIT_NEW_SEARCH","newSearch","type","getData","searchQuery","locationQuery","page","dispatch","location","getLatestJob","get","res","payload","data","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,eAAjC,QAAwD,SAAxD;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEF;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,WAAD,EAAcC,aAAd;AAAA,MAA6BC,IAA7B,uEAAoC,CAApC;AAAA;AAAA,wEAA0C,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEzDH,WAAW,KAAK,IAAhB,GAAuBI,QAAQ,KAAK,IAFqB;AAAA;AAAA;AAAA;;AAAA,+CAGlDC,YAAY,CAACH,IAAD,CAHsC;;AAAA;AAAA;AAAA,qBAK7CT,KAAK,CAACa,GAAN,4FAA8FN,WAA9F,uBAAsHC,aAAtH,mBAA4IC,IAA5I,EAL6C;;AAAA;AAKzDK,cAAAA,GALyD;;AAAA;AAQ7D,kBAAI;AAEAJ,gBAAAA,QAAQ,CAAC;AACLL,kBAAAA,IAAI,EAAEJ,UADD;AAELc,kBAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,iBAAD,CAAR;AAKH,eAPD,CAQA,OAAOC,KAAP,EAAc;AACVP,gBAAAA,QAAQ,CAAC;AACLL,kBAAAA,IAAI,EAAEH,UADD;AAELa,kBAAAA,OAAO,EAAEE;AAFJ,iBAAD,CAAR;AAIH;;AArB4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA1C;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAyBP,OAAO,IAAML,YAAY,GAAG,SAAfA,YAAe,CAACH,IAAD;AAAA;AAAA,yEAAU,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAChBV,KAAK,CAACa,GAAN,2FAA6FJ,IAA7F,EADgB;;AAAA;AAC5BK,cAAAA,GAD4B;;AAElC,kBAAI;AAEAJ,gBAAAA,QAAQ,CAAC;AACLL,kBAAAA,IAAI,EAAEJ,UADD;AAELc,kBAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,iBAAD,CAAR;AAKH,eAPD,CAQA,OAAOC,KAAP,EAAc;AACVP,gBAAAA,QAAQ,CAAC;AACLL,kBAAAA,IAAI,EAAEH,UADD;AAELa,kBAAAA,OAAO,EAAEE;AAFJ,iBAAD,CAAR;AAIH;;AAfiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["import axios from 'axios'\nimport { SET_JOBRES, FETCHERROR, INIT_NEW_SEARCH } from './types'\n\nexport const newSearch = () => {\n    return {\n        type: INIT_NEW_SEARCH,\n    }\n}\n\nexport const getData = (searchQuery, locationQuery, page = 1) => async dispatch => {\n    let res;\n    if (searchQuery === null & location === null) {\n        return getLatestJob(page)\n    } else {\n        res = await axios.get(`https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?title=${searchQuery}&location=${locationQuery}&page=${page}`)\n    }\n\n    try {\n\n        dispatch({\n            type: SET_JOBRES,\n            payload: res.data\n        })\n\n    }\n    catch (error) {\n        dispatch({\n            type: FETCHERROR,\n            payload: error\n        })\n    }\n}\n\n\nexport const getLatestJob = (page) => async dispatch => {\n    const res = await axios.get(`https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?page=${page}`);\n    try {\n\n        dispatch({\n            type: SET_JOBRES,\n            payload: res.data\n        })\n\n    }\n    catch (error) {\n        dispatch({\n            type: FETCHERROR,\n            payload: error\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}
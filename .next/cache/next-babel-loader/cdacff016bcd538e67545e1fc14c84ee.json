{"ast":null,"code":"import axios from 'axios';\nimport { SET_JOBRES, FETCHERROR, INIT_NEW_SEARCH, SET_PAGE } from './types';\nexport const newSearch = () => async dispatch => {\n  dispatch({\n    type: INIT_NEW_SEARCH\n  });\n  dispatch({\n    type: SET_PAGE,\n    payload: 1\n  });\n};\nexport const getData = (searchQuery, locationQuery, page = 1) => async dispatch => {\n  const res = await axios.get(`https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?title=${searchQuery}&location=${locationQuery}&page=${page}`);\n\n  try {\n    dispatch({\n      type: SET_JOBRES,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCHERROR,\n      payload: error\n    });\n  }\n};\nexport const getLatestJob = page => async dispatch => {\n  const res = await axios.get(`https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?page=${page}`);\n\n  try {\n    dispatch({\n      type: SET_JOBRES,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCHERROR,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["/Users/irenechow/Desktop/job-board/src/store/actions/jobs.js"],"names":["axios","SET_JOBRES","FETCHERROR","INIT_NEW_SEARCH","SET_PAGE","newSearch","dispatch","type","payload","getData","searchQuery","locationQuery","page","res","get","data","error","getLatestJob"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,eAAjC,EAAkDC,QAAlD,QAAkE,SAAlE;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC7CA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEJ;AADD,GAAD,CAAR;AAGAG,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEH,QADD;AAELI,IAAAA,OAAO,EAAE;AAFJ,GAAD,CAAR;AAKH,CATM;AAUP,OAAO,MAAMC,OAAO,GAAG,CAACC,WAAD,EAAcC,aAAd,EAA6BC,IAAI,GAAG,CAApC,KAA0C,MAAMN,QAAN,IAAkB;AAC/E,QAAMO,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,oFAAmFJ,WAAY,aAAYC,aAAc,SAAQC,IAAK,EAAjJ,CAAlB;;AAEA,MAAI;AAEAN,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN,UADD;AAELO,MAAAA,OAAO,EAAEK,GAAG,CAACE;AAFR,KAAD,CAAR;AAKH,GAPD,CAQA,OAAOC,KAAP,EAAc;AACVV,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,UADD;AAELM,MAAAA,OAAO,EAAEQ;AAFJ,KAAD,CAAR;AAIH;AACJ,CAjBM;AAoBP,OAAO,MAAMC,YAAY,GAAIL,IAAD,IAAU,MAAMN,QAAN,IAAkB;AACpD,QAAMO,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,mFAAkFF,IAAK,EAAlG,CAAlB;;AACA,MAAI;AACAN,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN,UADD;AAELO,MAAAA,OAAO,EAAEK,GAAG,CAACE;AAFR,KAAD,CAAR;AAKH,GAND,CAOA,OAAOC,KAAP,EAAc;AACVV,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,UADD;AAELM,MAAAA,OAAO,EAAEQ;AAFJ,KAAD,CAAR;AAIH;AACJ,CAfM","sourcesContent":["import axios from 'axios'\nimport { SET_JOBRES, FETCHERROR, INIT_NEW_SEARCH, SET_PAGE } from './types'\n\nexport const newSearch = () => async dispatch => {\n    dispatch({\n        type: INIT_NEW_SEARCH,\n    })\n    dispatch({\n        type: SET_PAGE,\n        payload: 1,\n    })\n\n}\nexport const getData = (searchQuery, locationQuery, page = 1) => async dispatch => {\n    const res = await axios.get(`https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?title=${searchQuery}&location=${locationQuery}&page=${page}`)\n\n    try {\n\n        dispatch({\n            type: SET_JOBRES,\n            payload: res.data\n        })\n\n    }\n    catch (error) {\n        dispatch({\n            type: FETCHERROR,\n            payload: error\n        })\n    }\n}\n\n\nexport const getLatestJob = (page) => async dispatch => {\n    const res = await axios.get(`https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?page=${page}`);\n    try {\n        dispatch({\n            type: SET_JOBRES,\n            payload: res.data\n        })\n\n    }\n    catch (error) {\n        dispatch({\n            type: FETCHERROR,\n            payload: error\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}
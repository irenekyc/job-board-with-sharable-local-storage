{"ast":null,"code":"var _jsxFileName = \"/Users/irenechow/Desktop/job-board/src/components/Main.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport JobCard from './JobCards/JobCard';\nimport { useSelector } from 'react-redux';\nimport Pagination from './Pagination';\n\nconst Main = ({\n  jobs,\n  error,\n  loading\n}) => {\n  const {\n    0: jobData,\n    1: setJobs\n  } = useState([]);\n  const {\n    newSearchLoading,\n    filtered\n  } = useSelector(state => state.jobs);\n  useEffect(() => {\n    setJobs(jobs);\n  }, [jobs]);\n  useEffect(() => {\n    if (newSearchLoading) {\n      setJobs([]);\n    }\n  }, [newSearchLoading]);\n  useEffect(() => {\n    setJobs(filtered);\n  }, [filtered]);\n  return __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }\n  }, __jsx(Pagination, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, error ? __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }\n  }, \"Error\") : loading || newSearchLoading ? __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 48\n    }\n  }, \" Loading ...\") : jobData && jobData.length > 0 ? jobData.map(job => __jsx(JobCard, {\n    key: job.id,\n    data: job,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 73\n    }\n  })) : jobData && jobData.length == 0 && __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 60\n    }\n  }, \" No result, please go back or clear filters\")));\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/irenechow/Desktop/job-board/src/components/Main.js"],"names":["React","useEffect","useState","JobCard","useSelector","Pagination","Main","jobs","error","loading","jobData","setJobs","newSearchLoading","filtered","state","length","map","job","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AACvC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAqBT,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM;AAAEU,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAiCT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACP,IAAhB,CAAlD;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,CAACJ,IAAD,CAAP;AACH,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,gBAAJ,EAAsB;AAClBD,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAJQ,EAIN,CAACC,gBAAD,CAJM,CAAT;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,CAACE,QAAD,CAAP;AACH,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAEH;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,KAAK,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAJ,GACFC,OAAO,IAAIG,gBAAX,GAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA/B,GACIF,OAAO,IAAIA,OAAO,CAACK,MAAR,GAAiB,CAA5B,GAAgCL,OAAO,CAACM,GAAR,CAAYC,GAAG,IAAK,MAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAG,CAACC,EAAlB;AAAsB,IAAA,IAAI,EAAED,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CAAhC,GACIP,OAAO,IAAIA,OAAO,CAACK,MAAR,IAAkB,CAA7B,IAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAJnD,CAFG,CAAP;AAUH,CA7BD;;AA+BA,eAAeT,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport JobCard from './JobCards/JobCard';\nimport { useSelector } from 'react-redux';\nimport Pagination from './Pagination'\n\nconst Main = ({ jobs, error, loading }) => {\n    const [jobData, setJobs] = useState([])\n    const { newSearchLoading, filtered } = useSelector(state => state.jobs)\n\n    useEffect(() => {\n        setJobs(jobs)\n    }, [jobs])\n\n    useEffect(() => {\n        if (newSearchLoading) {\n            setJobs([])\n        }\n    }, [newSearchLoading])\n\n\n    useEffect(() => {\n        setJobs(filtered)\n    }, [filtered])\n\n    return <main>\n        <Pagination />\n        <div className=\"container\">\n            {error ? (<h2>Error</h2>) :\n                loading || newSearchLoading ? (<h2> Loading ...</h2>) :\n                    jobData && jobData.length > 0 ? jobData.map(job => (<JobCard key={job.id} data={job} />)) :\n                        jobData && jobData.length == 0 && (<h2> No result, please go back or clear filters</h2>)\n            }\n        </div>\n    </main>\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/irenechow/Desktop/job-board/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\nwidth:90%;\\npadding: 100px 50px;\\ndisplay: grid;\\ngrid-gap: 1rem;\\ngrid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nwidth:100%;\\nheight:100%;\\ndisplay:grid;\\nplace-items:center;\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport styled from 'styled-components';\nimport JobCard from './JobCards/JobCard';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getData } from '../store/actions/jobs';\nvar MainSection = styled.main(_templateObject());\n_c = MainSection;\nvar Container = styled.div(_templateObject2());\n_c2 = Container;\n\nvar Main = function Main(_ref) {\n  _s();\n\n  var jobs = _ref.jobs,\n      error = _ref.error,\n      loading = _ref.loading;\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      jobData = _useState[0],\n      setJobs = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.jobs;\n  }),\n      newSearchLoading = _useSelector.newSearchLoading,\n      filtered = _useSelector.filtered;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.query;\n  }),\n      search = _useSelector2.search,\n      location = _useSelector2.location;\n\n  var _useState2 = useState(0),\n      curPage = _useState2[0],\n      setCurPage = _useState2[1];\n\n  var observer = useRef();\n\n  var _useState3 = useState(true),\n      hasMore = _useState3[0],\n      setHasmore = _useState3[1];\n\n  var lastElementRef = useCallback(function (node) {\n    if (loading) return;\n\n    if (observer.current) {\n      observer.current.disconnect();\n    }\n\n    observer.current = new IntersectionObserver(function (entries) {\n      if (entries[0].isIntersecting) {\n        getData(null, null, curPage + 1);\n        setCurPage(curPage + 1);\n      }\n    });\n\n    if (node) {\n      observer.current.observe(node);\n    }\n  }, [loading, hasMore]);\n  useEffect(function () {\n    setJobs(jobs);\n  }, [jobs]);\n  useEffect(function () {\n    if (newSearchLoading) {\n      setJobs([]);\n    }\n  }, [newSearchLoading]);\n  useEffect(function () {\n    setJobs(filtered);\n  }, [filtered]);\n  return __jsx(MainSection, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, search && __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \" You search for \", search), location && __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 27\n    }\n  }, \" Jobs in \", location), search || location ? __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 36\n    }\n  }, \"Clear Filter\") : null, error ? __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }\n  }, \"Error\") : loading || newSearchLoading ? __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 48\n    }\n  }, \" Loading ...\") : jobData && jobData.map(function (job, index) {\n    if (index == jobData.length - 1) {\n      return __jsx(\"div\", {\n        key: index,\n        ref: lastElementRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 36\n        }\n      }, __jsx(JobCard, {\n        className: \"job-card\",\n        key: index,\n        data: job,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 74\n        }\n      }));\n    }\n\n    return __jsx(JobCard, {\n      className: \"job-card\",\n      key: index,\n      data: job,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    });\n  })));\n};\n\n_s(Main, \"eb/mRIEyHYNOO8ZIF1fit4zRPGA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c3 = Main;\nexport default Main;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MainSection\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Main\");","map":{"version":3,"sources":["/Users/irenechow/Desktop/job-board/src/components/Main.js"],"names":["React","useEffect","useState","useRef","useCallback","styled","JobCard","useSelector","useDispatch","getData","MainSection","main","Container","div","Main","jobs","error","loading","dispatch","jobData","setJobs","state","newSearchLoading","filtered","query","search","location","curPage","setCurPage","observer","hasMore","setHasmore","lastElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","map","job","index","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react'\nimport styled from 'styled-components'\nimport JobCard from './JobCards/JobCard';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getData } from '../store/actions/jobs';\n\n\nconst MainSection = styled.main`\nwidth:100%;\nheight:100%;\ndisplay:grid;\nplace-items:center;`\nconst Container = styled.div`\nwidth:90%;\npadding: 100px 50px;\ndisplay: grid;\ngrid-gap: 1rem;\ngrid-template-columns: repeat(auto-fit, minmax(320px, 1fr));`\n\n\nconst Main = ({ jobs, error, loading }) => {\n    const dispatch = useDispatch()\n    const [jobData, setJobs] = useState([])\n    const { newSearchLoading, filtered } = useSelector(state => state.jobs)\n    const { search, location } = useSelector(state => state.query)\n    const [curPage, setCurPage] = useState(0)\n    const observer = useRef()\n    const [hasMore, setHasmore] = useState(true)\n    const lastElementRef = useCallback(node => {\n        if (loading) return;\n        if (observer.current) {\n            observer.current.disconnect()\n        }\n        observer.current = new IntersectionObserver(\n            entries => {\n                if (entries[0].isIntersecting) {\n                    getData(null, null, curPage + 1)\n                    setCurPage(curPage + 1)\n                }\n            }\n        )\n        if (node) { observer.current.observe(node) }\n    }, [loading, hasMore])\n    useEffect(() => {\n        setJobs(jobs)\n    }, [jobs])\n\n    useEffect(() => {\n        if (newSearchLoading) {\n            setJobs([])\n        }\n\n    }, [newSearchLoading])\n\n\n    useEffect(() => {\n        setJobs(filtered)\n    }, [filtered])\n    return <MainSection>\n        <Container>\n            {search && (<p> You search for {search}\n            </p>)}\n            {location && (<p> Jobs in {location}</p>)}\n            {search || location ? (<p>Clear Filter</p>) : null}\n            {error ? (<h2>Error</h2>) :\n                loading || newSearchLoading ? (<h2> Loading ...</h2>) :\n                    jobData && jobData.map((job, index) => {\n                        if (index == jobData.length - 1) {\n                            return <div key={index} ref={lastElementRef}><JobCard className=\"job-card\" key={index} data={job} /></div>\n                        }\n                        return (<JobCard className=\"job-card\" key={index} data={job} />)\n                    })}\n\n        </Container>\n    </MainSection>\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}
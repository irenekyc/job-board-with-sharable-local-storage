{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SET_FILTER_OPTIONS, CLEAR_FILTER, SET_JOBRES, FETCHERROR } from './types';\nimport axios from 'axios';\nexport var set_filter = function set_filter(search, location) {\n  return {\n    type: SET_FILTER_OPTIONS,\n    payload: {\n      search: search,\n      location: location\n    }\n  };\n};\nexport var clear_filter = function clear_filter() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: CLEAR_FILTER\n              });\n              _context.next = 3;\n              return axios.get(\"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?page=1\");\n\n            case 3:\n              res = _context.sent;\n\n              try {\n                dispatch({\n                  type: SET_JOBRES,\n                  payload: res.data\n                });\n              } catch (error) {\n                dispatch({\n                  type: FETCHERROR\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/irenechow/Desktop/job-board/src/store/actions/query.js"],"names":["SET_FILTER_OPTIONS","CLEAR_FILTER","SET_JOBRES","FETCHERROR","axios","set_filter","search","location","type","payload","clear_filter","dispatch","get","res","data","error"],"mappings":";;AAAA,SAASA,kBAAT,EAA6BC,YAA7B,EAA2CC,UAA3C,EAAuDC,UAAvD,QAAyE,SAAzE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAASC,QAAT,EAAsB;AAC5C,SAAO;AACHC,IAAAA,IAAI,EAAER,kBADH;AAEHS,IAAAA,OAAO,EAAE;AACLH,MAAAA,MAAM,EAANA,MADK;AAELC,MAAAA,QAAQ,EAARA;AAFK;AAFN,GAAP;AAOH,CARM;AAUP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA,wEAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9BA,cAAAA,QAAQ,CAAC;AACLH,gBAAAA,IAAI,EAAEP;AADD,eAAD,CAAR;AAD8B;AAAA,qBAIZG,KAAK,CAACQ,GAAN,CAAU,mFAAV,CAJY;;AAAA;AAIxBC,cAAAA,GAJwB;;AAM9B,kBAAI;AACAF,gBAAAA,QAAQ,CAAC;AACLH,kBAAAA,IAAI,EAAEN,UADD;AAELO,kBAAAA,OAAO,EAAEI,GAAG,CAACC;AAFR,iBAAD,CAAR;AAIH,eALD,CAMA,OAAOC,KAAP,EAAc;AACVJ,gBAAAA,QAAQ,CAAC;AACLH,kBAAAA,IAAI,EAAEL;AADD,iBAAD,CAAR;AAGH;;AAhB6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["import { SET_FILTER_OPTIONS, CLEAR_FILTER, SET_JOBRES, FETCHERROR } from './types'\nimport axios from 'axios'\n\nexport const set_filter = (search, location) => {\n    return {\n        type: SET_FILTER_OPTIONS,\n        payload: {\n            search,\n            location,\n        }\n    }\n}\n\nexport const clear_filter = () => async dispatch => {\n    dispatch({\n        type: CLEAR_FILTER\n    })\n    const res = await axios.get(\"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?page=1\");\n\n    try {\n        dispatch({\n            type: SET_JOBRES,\n            payload: res.data\n        })\n    }\n    catch (error) {\n        dispatch({\n            type: FETCHERROR,\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/irenechow/Desktop/job-board/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\nwidth:90%;\\npadding: 100px 50px;\\ndisplay: grid;\\ngrid-gap: 1rem;\\ngrid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nwidth:100%;\\nheight:100%;\\ndisplay:grid;\\nplace-items:center;\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport JobCard from './JobCards/JobCard';\nimport { useSelector } from 'react-redux';\nvar MainSection = styled.main(_templateObject());\n_c = MainSection;\nvar Container = styled.div(_templateObject2());\n_c2 = Container;\n\nvar Main = function Main(_ref) {\n  _s();\n\n  var jobs = _ref.jobs,\n      error = _ref.error,\n      loading = _ref.loading;\n\n  var _useState = useState([]),\n      jobData = _useState[0],\n      setJobs = _useState[1];\n\n  var _useState2 = useState(true),\n      firstLoad = _useState2[0],\n      setFirstLoad = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.jobs;\n  }),\n      filtered = _useSelector.filtered;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.query;\n  }),\n      search = _useSelector2.search,\n      location = _useSelector2.location;\n\n  useEffect(function () {\n    setJobs(jobs);\n  }, [jobs]);\n  useEffect(function () {\n    setJobs(filtered);\n    setFirstLoad(false);\n    console.log(\"searchedResult\");\n  }, [filtered]);\n  return __jsx(MainSection, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, error ? __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }, \"Error\") : loading ? __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 28\n    }\n  }, \" Loading ...\") : jobData && jobData.map(function (job) {\n    return __jsx(JobCard, {\n      key: job.id,\n      data: job,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    });\n  })));\n};\n\n_s(Main, \"qdARgWKlNLlVowbajxQg3sYGQwk=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c3 = Main;\nexport default Main;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MainSection\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Main\");","map":{"version":3,"sources":["/Users/irenechow/Desktop/job-board/src/components/Main.js"],"names":["React","useEffect","useState","styled","JobCard","useSelector","MainSection","main","Container","div","Main","jobs","error","loading","jobData","setJobs","firstLoad","setFirstLoad","state","filtered","query","search","location","console","log","map","job","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,IAAMC,WAAW,GAAGH,MAAM,CAACI,IAAV,mBAAjB;KAAMD,W;AAKN,IAAME,SAAS,GAAGL,MAAM,CAACM,GAAV,oBAAf;MAAMD,S;;AAQN,IAAME,IAAI,GAAG,SAAPA,IAAO,OAA8B;AAAA;;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACZX,QAAQ,CAAC,EAAD,CADI;AAAA,MAChCY,OADgC;AAAA,MACvBC,OADuB;;AAAA,mBAELb,QAAQ,CAAC,IAAD,CAFH;AAAA,MAEhCc,SAFgC;AAAA,MAErBC,YAFqB;;AAAA,qBAGlBZ,WAAW,CAAC,UAAAa,KAAK;AAAA,WAAIA,KAAK,CAACP,IAAV;AAAA,GAAN,CAHO;AAAA,MAG/BQ,QAH+B,gBAG/BA,QAH+B;;AAAA,sBAIVd,WAAW,CAAC,UAAAa,KAAK;AAAA,WAAIA,KAAK,CAACE,KAAV;AAAA,GAAN,CAJD;AAAA,MAI/BC,MAJ+B,iBAI/BA,MAJ+B;AAAA,MAIvBC,QAJuB,iBAIvBA,QAJuB;;AAKvCrB,EAAAA,SAAS,CAAC,YAAM;AACZc,IAAAA,OAAO,CAACJ,IAAD,CAAP;AACH,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIAV,EAAAA,SAAS,CAAC,YAAM;AACZc,IAAAA,OAAO,CAACI,QAAD,CAAP;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEH,GALQ,EAKN,CAACL,QAAD,CALM,CAAT;AAMA,SAAO,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAJ,GACFC,OAAO,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,GACHC,OAAO,IAAIA,OAAO,CAACW,GAAR,CAAY,UAAAC,GAAG;AAAA,WACtB,MAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,GAAG,CAACC,EAAlB;AAAsB,MAAA,IAAI,EAAED,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADsB;AAAA,GAAf,CAHvB,CADG,CAAP;AASH,CAxBD;;GAAMhB,I;UAGmBL,W,EACQA,W;;;MAJ3BK,I;AA0BN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport JobCard from './JobCards/JobCard';\nimport { useSelector } from 'react-redux';\n\n\nconst MainSection = styled.main`\nwidth:100%;\nheight:100%;\ndisplay:grid;\nplace-items:center;`\nconst Container = styled.div`\nwidth:90%;\npadding: 100px 50px;\ndisplay: grid;\ngrid-gap: 1rem;\ngrid-template-columns: repeat(auto-fit, minmax(320px, 1fr));`\n\n\nconst Main = ({ jobs, error, loading }) => {\n    const [jobData, setJobs] = useState([])\n    const [firstLoad, setFirstLoad] = useState(true)\n    const { filtered } = useSelector(state => state.jobs)\n    const { search, location } = useSelector(state => state.query)\n    useEffect(() => {\n        setJobs(jobs)\n    }, [jobs])\n\n    useEffect(() => {\n        setJobs(filtered)\n        setFirstLoad(false)\n        console.log(\"searchedResult\")\n\n    }, [filtered])\n    return <MainSection>\n        <Container>\n            {error ? (<h2>Error</h2>) :\n                loading ? (<h2> Loading ...</h2>) :\n                    jobData && jobData.map(job => (\n                        <JobCard key={job.id} data={job}></JobCard>))}\n\n        </Container>\n    </MainSection>\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}
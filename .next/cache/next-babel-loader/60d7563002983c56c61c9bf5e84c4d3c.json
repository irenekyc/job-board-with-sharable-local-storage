{"ast":null,"code":"var _jsxFileName = \"/Users/irenechow/Desktop/job-board/src/components/Pagination.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useSelector, useDispatch } from 'react-redux';\nimport { clear_filter, set_page } from '../store/actions/query';\nimport { getData, getLatestJob, newSearch } from '../store/actions/jobs';\nimport { useEffect, useState } from 'react';\n\nconst Pagination = () => {\n  const dispatch = useDispatch();\n  const {\n    search,\n    location,\n    page,\n    filteredSearch\n  } = useSelector(state => state.query);\n  const {\n    0: hasPrev,\n    1: setHasPrev\n  } = useState(false);\n  const {\n    0: hasNext,\n    1: setHasNext\n  } = useState(true);\n  useEffect(() => {\n    if (page <= 1) {\n      setHasPrev(false);\n    } else {\n      setHasPrev(true);\n    }\n  }, [page]);\n\n  const clearFilterHandler = () => {\n    dispatch(newSearch());\n    dispatch(clear_filter());\n  };\n\n  const PaginationHandler = action => {\n    dispatch(newSearch());\n    let newPage;\n\n    if (action === \"prev\") {\n      newPage = page - 1;\n    } else {\n      newPage = page + 1;\n    }\n\n    if (filteredSearch) {\n      dispatch(getData(search, location, newPage));\n    } else {\n      dispatch(getLatestJob(newPage));\n      dispatch(set_page(newPage));\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"pagination-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }\n  }, search && __jsx(\"p\", {\n    className: \"pagination-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \" You search for \", search, \" \"), location && __jsx(\"p\", {\n    className: \"pagination-location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }, \" Jobs in \", location), search || location ? __jsx(\"p\", {\n    className: \"pagination-clear\",\n    onClick: clearFilterHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 32\n    }\n  }, \"Clear Filter\") : null, hasPrev && __jsx(\"span\", {\n    onClick: () => PaginationHandler(\"prev\"),\n    className: \"pagination-prev\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 22\n    }\n  }, \" Prev \"), hasNext && __jsx(\"span\", {\n    onClick: () => PaginationHandler(\"next\"),\n    className: \"pagination-next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }\n  }, \" Next \"));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/irenechow/Desktop/job-board/src/components/Pagination.js"],"names":["useSelector","useDispatch","clear_filter","set_page","getData","getLatestJob","newSearch","useEffect","useState","Pagination","dispatch","search","location","page","filteredSearch","state","query","hasPrev","setHasPrev","hasNext","setHasNext","clearFilterHandler","PaginationHandler","action","newPage"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,wBAAvC;AACA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,SAAhC,QAAiD,uBAAjD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAErB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA;AAA1B,MAA6Cd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAA9D;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,IAAI,IAAI,CAAZ,EAAe;AAAEK,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAmB,KAApC,MAA0C;AACtCA,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,GAJQ,EAIN,CAACL,IAAD,CAJM,CAAT;;AAMA,QAAMQ,kBAAkB,GAAG,MAAM;AAC7BX,IAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACAI,IAAAA,QAAQ,CAACR,YAAY,EAAb,CAAR;AACH,GAHD;;AAKA,QAAMoB,iBAAiB,GAAIC,MAAD,IAAY;AAClCb,IAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACA,QAAIkB,OAAJ;;AACA,QAAID,MAAM,KAAK,MAAf,EAAuB;AACnBC,MAAAA,OAAO,GAAGX,IAAI,GAAG,CAAjB;AACH,KAFD,MAEO;AACHW,MAAAA,OAAO,GAAGX,IAAI,GAAG,CAAjB;AACH;;AACD,QAAIC,cAAJ,EAAoB;AAChBJ,MAAAA,QAAQ,CAACN,OAAO,CAACO,MAAD,EAASC,QAAT,EAAmBY,OAAnB,CAAR,CAAR;AACH,KAFD,MAEO;AACHd,MAAAA,QAAQ,CAACL,YAAY,CAACmB,OAAD,CAAb,CAAR;AACAd,MAAAA,QAAQ,CAACP,QAAQ,CAACqB,OAAD,CAAT,CAAR;AACH;AACJ,GAdD;;AAgBA,SAAO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFb,MAAM,IAAK;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkDA,MAAlD,MADT,EAEFC,QAAQ,IAAK;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA6CA,QAA7C,CAFX,EAGFD,MAAM,IAAIC,QAAV,GAAsB;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAgC,IAAA,OAAO,EAAES,kBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAtB,GAAuG,IAHrG,EAIFJ,OAAO,IAAK;AAAM,IAAA,OAAO,EAAE,MAAMK,iBAAiB,CAAC,MAAD,CAAtC;AAAgD,IAAA,SAAS,EAAC,iBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJV,EAKFH,OAAO,IAAK;AAAM,IAAA,OAAO,EAAE,MAAMG,iBAAiB,CAAC,MAAD,CAAtC;AAAgD,IAAA,SAAS,EAAC,iBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALV,CAAP;AAOH,CAzCD;;AA2CA,eAAeb,UAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { clear_filter, set_page } from '../store/actions/query';\nimport { getData, getLatestJob, newSearch } from '../store/actions/jobs';\nimport { useEffect, useState } from 'react';\n\nconst Pagination = () => {\n\n    const dispatch = useDispatch()\n    const { search, location, page, filteredSearch } = useSelector(state => state.query);\n    const [hasPrev, setHasPrev] = useState(false)\n    const [hasNext, setHasNext] = useState(true)\n\n    useEffect(() => {\n        if (page <= 1) { setHasPrev(false) } else {\n            setHasPrev(true)\n        }\n    }, [page])\n\n    const clearFilterHandler = () => {\n        dispatch(newSearch())\n        dispatch(clear_filter())\n    }\n\n    const PaginationHandler = (action) => {\n        dispatch(newSearch())\n        let newPage;\n        if (action === \"prev\") {\n            newPage = page - 1;\n        } else {\n            newPage = page + 1;\n        }\n        if (filteredSearch) {\n            dispatch(getData(search, location, newPage))\n        } else {\n            dispatch(getLatestJob(newPage))\n            dispatch(set_page(newPage))\n        }\n    }\n\n    return <div className=\"pagination-row\">\n        {search && (<p className=\"pagination-search\"> You search for {search} </p>)}\n        {location && (<p className=\"pagination-location\"> Jobs in {location}</p>)}\n        {search || location ? (<p className=\"pagination-clear\" onClick={clearFilterHandler}>Clear Filter</p>) : null}\n        {hasPrev && (<span onClick={() => PaginationHandler(\"prev\")} className=\"pagination-prev\"> Prev </span>)}\n        {hasNext && (<span onClick={() => PaginationHandler(\"next\")} className=\"pagination-next\"> Next </span>)}\n    </div>\n}\n\nexport default Pagination"]},"metadata":{},"sourceType":"module"}
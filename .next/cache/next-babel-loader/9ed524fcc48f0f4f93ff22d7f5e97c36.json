{"ast":null,"code":"var _jsxFileName = \"/Users/irenechow/Desktop/job-board/src/components/Main.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport JobCard from './JobCards/JobCard';\nimport { useSelector, useDispatch } from 'react-redux';\nconst MainSection = styled.main`\nwidth:100%;\nheight:100%;\ndisplay:grid;\nplace-items:center;`;\nconst Container = styled.div`\nwidth:90%;\npadding: 100px 50px;\ndisplay: grid;\ngrid-gap: 1rem;\ngrid-template-columns: repeat(auto-fit, minmax(320px, 1fr));`;\n\nconst Main = ({\n  jobs,\n  error,\n  loading\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: jobData,\n    1: setJobs\n  } = useState([]);\n  const {\n    newSearchLoading,\n    filtered\n  } = useSelector(state => state.jobs);\n  const {\n    search,\n    location\n  } = useSelector(state => state.query);\n  const {\n    0: curPage,\n    1: setCurPage\n  } = useState(0);\n  useEffect(() => {\n    setJobs(jobs);\n  }, [jobs]);\n  useEffect(() => {\n    if (newSearchLoading) {\n      setJobs([]);\n    }\n  }, [newSearchLoading]);\n  useEffect(() => {\n    setJobs(filtered);\n  }, [filtered]);\n  return __jsx(MainSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, search && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \" You search for \", search), location && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }\n  }, \" Jobs in \", location), search || location ? __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 36\n    }\n  }, \"Clear Filter\") : null, error ? __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }, \"Error\") : loading || newSearchLoading ? __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 48\n    }\n  }, \" Loading ...\") : jobData && jobData.map((job, index) => {\n    if (index == jobData.length - 1) {\n      return __jsx(\"div\", {\n        key: index,\n        ref: lastElementRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 36\n        }\n      }, __jsx(JobCard, {\n        className: \"job-card\",\n        key: index,\n        data: job,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 74\n        }\n      }));\n    }\n\n    return __jsx(JobCard, {\n      className: \"job-card\",\n      key: index,\n      data: job,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    });\n  })));\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/irenechow/Desktop/job-board/src/components/Main.js"],"names":["React","useEffect","useState","styled","JobCard","useSelector","useDispatch","MainSection","main","Container","div","Main","jobs","error","loading","dispatch","jobData","setJobs","newSearchLoading","filtered","state","search","location","query","curPage","setCurPage","map","job","index","length","lastElementRef"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport JobCard from './JobCards/JobCard';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nconst MainSection = styled.main`\nwidth:100%;\nheight:100%;\ndisplay:grid;\nplace-items:center;`\nconst Container = styled.div`\nwidth:90%;\npadding: 100px 50px;\ndisplay: grid;\ngrid-gap: 1rem;\ngrid-template-columns: repeat(auto-fit, minmax(320px, 1fr));`\n\n\nconst Main = ({ jobs, error, loading }) => {\n    const dispatch = useDispatch()\n    const [jobData, setJobs] = useState([])\n    const { newSearchLoading, filtered } = useSelector(state => state.jobs)\n    const { search, location } = useSelector(state => state.query)\n    const [curPage, setCurPage] = useState(0)\n\n    useEffect(() => {\n        setJobs(jobs)\n    }, [jobs])\n\n    useEffect(() => {\n        if (newSearchLoading) {\n            setJobs([])\n        }\n\n    }, [newSearchLoading])\n\n\n    useEffect(() => {\n        setJobs(filtered)\n    }, [filtered])\n    return <MainSection>\n        <Container>\n            {search && (<p> You search for {search}\n            </p>)}\n            {location && (<p> Jobs in {location}</p>)}\n            {search || location ? (<p>Clear Filter</p>) : null}\n            {error ? (<h2>Error</h2>) :\n                loading || newSearchLoading ? (<h2> Loading ...</h2>) :\n                    jobData && jobData.map((job, index) => {\n                        if (index == jobData.length - 1) {\n                            return <div key={index} ref={lastElementRef}><JobCard className=\"job-card\" key={index} data={job} /></div>\n                        }\n                        return (<JobCard className=\"job-card\" key={index} data={job} />)\n                    })}\n\n        </Container>\n    </MainSection>\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}
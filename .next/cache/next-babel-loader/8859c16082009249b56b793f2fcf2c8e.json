{"ast":null,"code":"import axios from 'axios';\nimport { SET_JOBRES, FETCHERROR, INIT_NEW_SEARCH } from './types';\nexport const newSearch = () => {\n  return {\n    type: INIT_NEW_SEARCH\n  };\n};\nexport const getData = (searchQuery, locationQuery, page = 1) => async dispatch => {\n  const res = await axios.get(`https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?title=${searchQuery}&location=${locationQuery}&page=${page}`);\n\n  try {\n    dispatch({\n      type: SET_JOBRES,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCHERROR,\n      payload: error\n    });\n  }\n};\nexport const getLatestJob = page => async dispatch => {\n  console.log(\"called getLatestJob\");\n  const res = await axios.get(`https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?page=${page}`);\n\n  try {\n    dispatch({\n      type: SET_JOBRES,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCHERROR,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["/Users/irenechow/Desktop/job-board/src/store/actions/jobs.js"],"names":["axios","SET_JOBRES","FETCHERROR","INIT_NEW_SEARCH","newSearch","type","getData","searchQuery","locationQuery","page","dispatch","res","get","payload","data","error","getLatestJob","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,eAAjC,QAAwD,SAAxD;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEF;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMG,OAAO,GAAG,CAACC,WAAD,EAAcC,aAAd,EAA6BC,IAAI,GAAG,CAApC,KAA0C,MAAMC,QAAN,IAAkB;AAC/E,QAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,oFAAmFL,WAAY,aAAYC,aAAc,SAAQC,IAAK,EAAjJ,CAAlB;;AAEA,MAAI;AAEAC,IAAAA,QAAQ,CAAC;AACLL,MAAAA,IAAI,EAAEJ,UADD;AAELY,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,KAAD,CAAR;AAKH,GAPD,CAQA,OAAOC,KAAP,EAAc;AACVL,IAAAA,QAAQ,CAAC;AACLL,MAAAA,IAAI,EAAEH,UADD;AAELW,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH;AACJ,CAjBM;AAoBP,OAAO,MAAMC,YAAY,GAAIP,IAAD,IAAU,MAAMC,QAAN,IAAkB;AACpDO,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,QAAMP,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,mFAAkFH,IAAK,EAAlG,CAAlB;;AACA,MAAI;AACAC,IAAAA,QAAQ,CAAC;AACLL,MAAAA,IAAI,EAAEJ,UADD;AAELY,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,KAAD,CAAR;AAKH,GAND,CAOA,OAAOC,KAAP,EAAc;AACVL,IAAAA,QAAQ,CAAC;AACLL,MAAAA,IAAI,EAAEH,UADD;AAELW,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH;AACJ,CAhBM","sourcesContent":["import axios from 'axios'\nimport { SET_JOBRES, FETCHERROR, INIT_NEW_SEARCH } from './types'\n\nexport const newSearch = () => {\n    return {\n        type: INIT_NEW_SEARCH,\n    }\n}\n\nexport const getData = (searchQuery, locationQuery, page = 1) => async dispatch => {\n    const res = await axios.get(`https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?title=${searchQuery}&location=${locationQuery}&page=${page}`)\n\n    try {\n\n        dispatch({\n            type: SET_JOBRES,\n            payload: res.data\n        })\n\n    }\n    catch (error) {\n        dispatch({\n            type: FETCHERROR,\n            payload: error\n        })\n    }\n}\n\n\nexport const getLatestJob = (page) => async dispatch => {\n    console.log(\"called getLatestJob\")\n    const res = await axios.get(`https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?page=${page}`);\n    try {\n        dispatch({\n            type: SET_JOBRES,\n            payload: res.data\n        })\n\n    }\n    catch (error) {\n        dispatch({\n            type: FETCHERROR,\n            payload: error\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}